### Archives ###

# .tgz, .tpz, .tar.gz, .tar.z, .tar.Z, .ipk
regex/\.t([gp]?z|ar\.g?[zZ])$|\.ipk$
	Open=%cd %p#utar
	View=%view{ascii} gzip -dc %f 2>/dev/null | tar tvvf -

regex/\.tar\.bz$
	# Open=%cd %p#utar
	View=%view{ascii} bzip -dc %f 2>/dev/null | tar tvvf -

regex/\.t(ar\.bz2|bz2?|b2)$
	Open=%cd %p#utar
	View=%view{ascii} bzip2 -dc %f 2>/dev/null | tar tvvf -

# .tar.lzma, .tlz
regex/\.t(ar\.lzma|lz)$
	Open=%cd %p#utar
	View=%view{ascii} lzma -dc %f 2>/dev/null | tar tvvf -

# .tar.xz, .txz
regex/\.t(ar\.xz|xz)$
	Open=%cd %p#utar
	View=%view{ascii} xz -dc %f 2>/dev/null | tar tvvf -

# .tar.F - used in QNX
regex/\.tar\.F$
	# Open=%cd %p#utar
	View=%view{ascii} freeze -dc %f 2>/dev/null | tar tvvf -

# .qpr/.qpk - QNX Neutrino package installer files
regex/\.(qp[rk])$
	Open=%cd %p#utar
	View=%view{ascii} gzip -dc %f 2>/dev/null | tar tvvf -

# tar
regex/\.(tar|TAR)$
	Open=%cd %p#utar
	View=%view{ascii} tar tvvf - < %f

# lha
type/^LHa\ .*archive
	Open=%cd %p#ulha
	View=%view{ascii} lha l %f

# arj
regex/\.a(rj|[0-9][0-9])$
	Open=%cd %p#uarj
	View=%view{ascii} unarj l %f

# cab
regex/\.([cC][aA][bB])$
	Open=%cd %p#ucab
	View=%view{ascii} cabextract -l %f

# ha
regex/\.([Hh][Aa])$
	Open=%cd %p#uha
	View=%view{ascii} ha lf %f

# rar
regex/\.[rR]([aA][rR]|[0-9][0-9])$
	Open=%cd %p#urar
	View=%view{ascii} rar v -c- %f

# ALZip
regex/\.(alz|ALZ)$
	Open=%cd %p#ualz
	View=%view{ascii} unalz -l %f

# cpio
shell/.cpio.Z
	Open=%cd %p#ucpio
	View=%view{ascii} gzip -dc %f | cpio -itv 2>/dev/null

shell/.cpio.gz
	Open=%cd %p#ucpio
	View=%view{ascii} gzip -dc %f | cpio -itv 2>/dev/null

shell/.cpio
	Open=%cd %p#ucpio
	View=%view{ascii} cpio -itv < %f 2>/dev/null

# ls-lR
regex/(^|\.)ls-?lR(\.gz|Z|bz2)$
	Open=%cd %p#lslR

# patch
regex/\.(diff|patch)(\.bz2)$
	Open=%cd %p#patchfs
	View=%view{ascii} bzip2 -dc %f 2>/dev/null

regex/\.(diff|patch)(\.(gz|Z))$
	Open=%cd %p#patchfs
	View=%view{ascii} gzip -dc %f 2>/dev/null

regex/\.(diff|patch)$
	Open=%cd %p#patchfs
	View=%view{ascii} /bin/cat %f 2>/dev/null

# ar library
regex/\.s?a$
	Open=%cd %p#uar
	#Open=%view{ascii} ar tv %f
	View=%view{ascii} file %f && nm -C %f

# trpm
regex/\.trpm$
	Open=%cd %p#trpm
	View=%view{ascii} rpm -q### Documents ###

# Postscript
type/^PostScript
	Open=evince %f &

# PDF
type/^PDF
	Open=evince %f &

# DjVu
regex/\.(djvu|DJVU)$
	Open=evince %f &

# fb2
regex/\.(fb2|FB2)$
	Open=fbless %f

#ivl --scripts `basename %p .trpm`

# RPM packages (SuSE uses *.spm for source packages)
regex/\.(src\.rpm|spm)$
	Open=%cd %p#rpm
	View=%view{ascii} if rpm --nosignature --version >/dev/null 2>&1; then RPM="rpm --nosignature" ; else RPM="rpm" ; fi ; $RPM -qivlp --scripts %f

regex/\.rpm$
	Open=%cd %p#rpm
	View=%view{ascii} if rpm --nosignature --version >/dev/null 2>&1; then RPM="rpm --nosignature" ; else RPM="rpm" ; fi ; $RPM -qivlp --scripts %f

# deb
regex/\.u?deb$
	Open=%cd %p#deb
	View=%view{ascii} dpkg-deb -I %f && echo && dpkg-deb -c %f

# dpkg
shell/.debd
        Open=%cd %p#debd
        View=%view{ascii} dpkg -s `echo %p | sed 's/\([0-9a-z.-]*\).*/\1/'`
# apt
shell/.deba
        Open=%cd %p#deba
        View=%view{ascii} apt-cache show `echo %p | sed 's/\([0-9a-z.-]*\).*/\1/'`

# ISO9660
regex/\.([iI][sS][oO])$
	Open=%cd %p#iso9660
	View=%view{ascii} isoinfo -l -i %f

# 7zip archives (they are not man pages)
regex/\.(7z|7Z)$
	Open=%cd %p#u7z
	View=%view{ascii} 7za l %f 2>/dev/null

# Mailboxes
type/^ASCII\ mail\ text
	Open=%cd %p#mailfs


### Documentation ###

# Texinfo
regex/\.(te?xi|texinfo)$

# GNU Info page
type/^Info\ text
	Open=info -f %f

shell/.info
	Open=info -f %f

# Manual page
regex/(([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])|\.man)$
	Open=case %d/%f in */log/*|*/logs/*) cat %f ;; *) { zsoelim %f 2>/dev/null || cat %f; } | nroff -c -Tlatin1 -mandoc ;; esac | %var{PAGER:more}
	View=%view{ascii,nroff} case %d/%f in */log/*|*/logs/*) cat %f ;; *) { zsoelim %f 2>/dev/null || cat %f; } | nroff -c -Tlatin1 -mandoc ;; esac

# Perl pod page
shell/.pod
	Open=pod2man %f | nroff -c -Tlatin1 -mandoc | %var{PAGER:more}
	View=%view{ascii,nroff} pod2man %f | nroff -c -Tlatin1 -mandoc

# Troff with me macros.
# Exception - "read.me" is not a nroff file.
shell/read.me
	Open=
	View=

shell/.me
	Open=nroff -c -Tlatin1 -me %f | %var{PAGER:more}
	View=%view{ascii,nroff} nroff -c -Tlatin1 -me %f

# Troff with ms macros.
shell/.ms
	Open=nroff -c -Tlatin1 -ms %f | %var{PAGER:more}
	View=%view{ascii,nroff} nroff -c -Tlatin1 -ms %f

# Manual page - compressed
regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.g?[Zz]$
	Open=case %d/%f in */log/*|*/logs/*) gzip -dc %f ;; *) gzip -dc %f | nroff -c -Tlatin1 -mandoc ;; esac | %var{PAGER:more}
	View=%view{ascii,nroff} case %d/%f in */log/*|*/logs/*) gzip -dc %f ;; *) gzip -dc %f | nroff -c -Tlatin1 -mandoc ;; esac

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz$
	Open=case %d/%f in */log/*|*/logs/*) bzip -dc %f ;; *) bzip -dc %f | nroff -c -Tlatin1 -mandoc ;; esac | %var{PAGER:more}
	View=%view{ascii,nroff} case %d/%f in */log/*|*/logs/*) bzip -dc %f ;; *) bzip -dc %f | nroff -c -Tlatin1 -mandoc ;; esac

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz2$
	Open=case %d/%f in */log/*|*/logs/*) bzip2 -dc %f ;; *) bzip2 -dc %f | nroff -c -Tlatin1 -mandoc ;; esac | %var{PAGER:more}
	View=%view{ascii,nroff} case %d/%f in */log/*|*/logs/*) bzip2 -dc %f ;; *) bzip2 -dc %f | nroff -c -Tlatin1 -mandoc ;; esac

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.lzma$
	Open=case %d/%f in */log/*|*/logs/*) lzma -dc %f ;; *) lzma -dc %f | nroff -c -Tlatin1 -mandoc ;; esac | %var{PAGER:more}
	View=%view{ascii,nroff} case %d/%f in */log/*|*/logs/*) lzma -dc %f ;; *) lzma -dc %f | nroff -c -Tlatin1 -mandoc ;; esac

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.xz$
	Open=case %d/%f in */log/*|*/logs/*) xz -dc %f ;; *) xz -dc %f | nroff -c -Tlatin1 -mandoc ;; esac | %var{PAGER:more}
	View=%view{ascii,nroff} case %d/%f in */log/*|*/logs/*) xz -dc %f ;; *) xz -dc %f | nroff -c -Tlatin1 -mandoc ;; esac


### Images ###

type/^GIF
	Include=image

type/^JPEG
	View=%view{ascii} identify %f; test -x /usr/bin/exif && echo && exif %f 2>/dev/null
	Include=image

type/^PC\ bitmap
	Include=image

type/^PNG
	Include=image

type/^TIFF
	Include=image

type/^PBM
	Include=image

type/^PGM
	Include=image

type/^PPM
	Include=image

type/^Netpbm
	Include=image

shell/.xcf
	Open=(gimp %f &)

shell/.xbm
	Open=bitmap %f

shell/.xpm
	Include=image
	View=sxpm %f

shell/.ico
	Include=image

include/image
	Open=qiv -B -m %f &
	View=%view{ascii} identify %f
	#View=%view{ascii} asciiview %f


### Video ###

regex/\.([aA][vV][iI])$
	Include=video

regex/\.([aA][sS][fFxX])$
	Include=video

regex/\.([dD][iI][vV][xX])$
	Include=video

regex/\.([mM][kK][vV])$
	Include=video

regex/\.([mM][oO][vV]|[qQ][tT])$
	Include=video

regex/\.([mM][pP]4|[mM][pP][eE]?[gG])$
	Include=video

# MPEG-2 TS container + H.264 codec
regex/\.([mM][tT][sS])$
	Include=video

regex/\.([vV][oO][bB])$
	Include=video

regex/\.([wW][mM][vV])$
	Include=video

regex/\.([fF][lL][iIcCvV])$
	Include=video

regex/\.([oO][gG][mM])$
	Include=video

regex/\.([rR][aA]?[mM])$
	Open=(realplay %f >/dev/null 2>&1 &)

include/video
	Open=(mplayer %f >/dev/null 2>&1 &)


### Plain compressed files ###

# ace
regex/\.(ace|ACE)$
	Open=%cd %p#uace
	View=%view{ascii} unace l %f
	Extract=unace x %f

# arc
regex/\.(arc|ARC)$
	Open=%cd %p#uarc
	View=%view{ascii} arc l %f
	Extract=arc x %f '*'
	Extract (with flags)=I=%{Enter any Arc flags:}; if test -n "$I"; then arc x $I %f; fi

# zip
type/^([Zz][Ii][Pp])\ archive
	Open=%cd %p#uzip
	View=%view{ascii} unzip -v %f

# zoo
regex/\.([Zz][Oo][Oo])$
	Open=%cd %p#uzoo
	View=%view{ascii} zoo l %f

# gzip
type/^gzip
	Open=gzip -dc %f | %var{PAGER:more}
	View=%view{ascii} gzip -dc %f 2>/dev/null

regex/\.(gz|Z)$
	View=%view{ascii} gzip -dc %f 2>/dev/null

# bzip2
type/^bzip2
	Open=bzip2 -dc %f | %var{PAGER:more}
	View=%view{ascii} bzip2 -dc %f 2>/dev/null

regex/\.bz2?$
	View=%view{ascii} bzip2 -dc %f 2>/dev/null

# bzip
type/^bzip
	Open=bzip -dc %f | %var{PAGER:more}
	View=%view{ascii} bzip -dc %f 2>/dev/null

# compress
type/^compress
	Open=gzip -dc %f | %var{PAGER:more}
	View=%view{ascii} gzip -dc %f 2>/dev/null

# lzma
regex/\.lzma$
	Open=lzma -dc %f | %var{PAGER:more}
	View=%view{ascii} lzma -dc %f 2>/dev/null

# xz
regex/\.xz$
	Open=xz -dc %f | %var{PAGER:more}
	View=%view{ascii} xz -dc %f 2>/dev/null
